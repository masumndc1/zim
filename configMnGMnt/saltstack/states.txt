

... state files are saltstack's file in which instructions are
... written inside in yaml syntax.
... by default states files are located at the /srv/salt folder

root@salt srv]# mkdir -p /srv/salt
[root@salt srv]# ls
salt
[root@salt srv]# cd salt/
[root@salt salt]# pwd
/srv/salt
[root@salt salt]# ls
httpd.sls
[root@salt salt]# cat httpd.sls
install_apache:
     pkg.installed:
       - name: httpd
[root@salt salt]#
[root@salt salt]#

... now run following

[root@salt salt]# salt '*' state.sls httpd
myminion:
----------
          ID: install_apache
    Function: pkg.installed
        Name: httpd
      Result: True
     Comment: Package httpd is already installed.
     Started: 03:16:02.784675
    Duration: 1670.064 ms
     Changes:

Summary
------------
Succeeded: 1
Failed:    0
------------
Total states run:     1
[root@salt salt]#


[root@salt salt]# salt '*' pkg.remove htop
myminion:
    ----------
    htop:
        ----------
        new:
        old:
            2.0.2-1.el7
[root@salt salt]#
[root@salt salt]# ls
htop.sls  httpd.sls
[root@salt salt]# cat htop.sls
install_htop:
     pkg.installed:
       - name: htop
[root@salt salt]#
[root@salt salt]# salt '*' state.sls htop
myminion:
----------
          ID: install_htop
    Function: pkg.installed
        Name: htop
      Result: True
     Comment: The following packages were installed/updated: htop
     Started: 03:18:58.142125
    Duration: 41927.752 ms
     Changes:
              ----------
              htop:
                  ----------
                  new:
                      2.0.2-1.el7
                  old:

Summary
------------
Succeeded: 1 (changed=1)
Failed:    0
------------
Total states run:     1
[root@salt salt]#
[root@salt salt]# ls
htop.sls  httpd.sls
[root@salt salt]#

... we have two state files htop.sls and httpd.sls. when we run it we just pass
... file name without .sls syntax to the command like
... "salt '*' state.sls <filename_witout_extension>

... the difference between state module and execution module.
... execution modules execute some task on systems. it just repeats again and
... again. while state modules are declarative which means it declare the last
... state of a task.

... we can see the available functions for a state module. one example is as
... follows.

[root@salt salt]# salt '*' sys.list_state_modules
[root@salt salt]# salt '*' sys.list_state_functions <module_name>
[root@salt salt]# salt '*' sys.list_state_functions pkg
myminion:
    - pkg.installed
    - pkg.latest
    - pkg.mod_aggregate
    - pkg.mod_init
    - pkg.purged
    - pkg.removed
    - pkg.uptodate
[root@salt salt]#

[root@salt salt]# salt '*' sys.state_doc pkg.installed

... an anatomy of state files

install_apache:
 pkg.installed:
 - name: apache2

... the format is as follows.

<ID Declaration>:
 <State Module>.<Function>:
 - name: <name>
 - <Function Arg>
 - <Function Arg>
 - <Function Arg>
 - <Requisite Declaration>:
 - <Requisite Reference>

[root@salt salt]# cat httpd.sls
install_apache:
 pkg.installed:
 - name: httpd

running httpd:
 service.running:
 - name: httpd
 - enable: True
[root@salt salt]#

[root@salt salt]# salt '*' state.sls httpd
myminion:
----------
          ID: install_apache
    Function: pkg.installed
        Name: httpd
      Result: True
     Comment: Package httpd is already installed.
     Started: 04:32:14.246178
    Duration: 1639.061 ms
     Changes:
----------
          ID: running httpd
    Function: service.running
        Name: httpd
      Result: True
     Comment: Service httpd is already enabled, and is in the desired state
     Started: 04:32:15.886353
    Duration: 1751.396 ms
     Changes:

Summary
------------
Succeeded: 2
Failed:    0
------------
Total states run:     2
[root@salt salt]#


... now we have added another minion

[root@salt salt]# salt-key
Accepted Keys:
controller
myminion
Denied Keys:
Unaccepted Keys:
Rejected Keys:
[root@salt salt]#
[root@salt salt]# salt '*' test.ping
controller:
    True
myminion:
    True
[root@salt salt]#

[root@salt salt]# salt '*' grains.item os_family
controller:
    ----------
    os_family:
        Debian
myminion:
    ----------
    os_family:
        RedHat
[root@salt salt]#

... the require module
... the require needs module and module id like below.

[root@salt salt]# cat -n httpd.sls
     1	install_httpd:
     2	 pkg.installed:
     3	 - name: httpd
     4
     5	running httpd:
     6	 service.running:
     7	 - name: httpd
     8	 - enable: True
     9	 - require:
    10	   - pkg: httpd
[root@salt salt]#

[root@salt salt]# salt 'my*' state.sls httpd
myminion:
----------
          ID: install_httpd
    Function: pkg.installed
        Name: httpd
      Result: True
     Comment: Package httpd is already installed.
     Started: 19:10:39.934899
    Duration: 1531.397 ms
     Changes:
----------
          ID: running httpd
    Function: service.running
        Name: httpd
      Result: True
     Comment: Service httpd is already enabled, and is running
     Started: 19:10:41.467494
    Duration: 3291.817 ms
     Changes:
              ----------
              httpd:
                  True

Summary
------------
Succeeded: 2 (changed=1)
Failed:    0
------------
Total states run:     2

... the module file and its function managed.
... usages are given below. following is collected from one
... well known book.

sync mod_status.conf:
     file.managed:
       	- name: /etc/apache2/mods-enabled/mod_status.conf
       	- source: salt://mod_status.conf
	- user: root
    	- group: root
    	- mode: 600

sync mod_status.load:
  file.managed:
    - name: /etc/apache2/mods-enabled/mod_status.load
    - source: salt://mod_status.load
    - user: root
    - group: root
    - mode: 600

... this files mod_status.conf and mod_status.load is located at master
... in /srv/salt folder.

... the _in end part to module require or watch.
... the state part which contain _in it telling other part of stat, that
... state is depend on this state. example like below.

[root@salt salt]# cat httpd.sls
install_httpd:
 pkg.installed:
 - name: httpd
 - require_in:
   - service: httpd

running httpd:
 service.running:
 - name: httpd
 - enable: True

[root@salt salt]#

[root@salt salt]# salt '*' state.sls httpd
myminion:
----------
          ID: install_httpd
    Function: pkg.installed
        Name: httpd
      Result: True
     Comment: Package httpd is already installed.
     Started: 19:25:51.057004
    Duration: 1501.731 ms
     Changes:
----------
          ID: running httpd
    Function: service.running
        Name: httpd
      Result: True
     Comment: Service httpd is already enabled, and is in the desired state
     Started: 19:25:52.560131
    Duration: 1552.215 ms
     Changes:

Summary
------------
Succeeded: 2
Failed:    0
------------

... one example of file.append state module

[root@saltmaster debian]# cat sources.sls
{% set src='/etc/apt/sources.list' %}
{% set dst='/etc/apt/sources.list.bk' %}
{% if not salt['file.file_exists'](dst) %}
backup:
 file.copy:
  - name: {{ dst }}
  - source: {{ src }}
{% endif %}

update_sourcelist:
 file.append:
  - name: {{ src }}
  - text: |
     # saltstack repo
     deb http://repo.saltstack.com/apt/debian/9/amd64/latest stretch main
[root@saltmaster debian]#
