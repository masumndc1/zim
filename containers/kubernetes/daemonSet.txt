

... if we need to run a pod in every nodes in a kube cluster then
... DaemonSet is the best choice for this. DaemonSet use a template to 
... create pods in everynode.
...
... we can also use nodeSelector to run pod in specific node.
... in that case kubernetes scheduler will ignore the scheduling.
...
... daemonSets are also controlled by reconciliation loop, that means
... it ensures the desired states of the pods.
...  

... an example of daemonSets can be.
... this example is taken from 
... https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-elasticsearch
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
spec:
  selector:
    matchLabels:
      name: fluentd-elasticsearch
  template:
    metadata:
      labels:
        name: fluentd-elasticsearch
    spec:
      tolerations:
      # this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can't run pods
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

// normally daemonset creates pod in every nodes but
// if we want to use a nodeSelector then we do by following
      nodeSelector:
        ssd: "true"
// 
      containers:
      - name: fluentd-elasticsearch
        image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volues:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers

... 
