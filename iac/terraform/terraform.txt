

... Using terraform to make VM in esxi and vCenter.

... First of all we need a Template. Template is a plan which is needed to make
... VMs by using terraform. If we dont have vcenter, we need to define an empty
... resource pool for a standalone ESXi host.

... basic
... at first we need to initial terraform

[root@localhost ~]# terraform
Usage: terraform [-version] [-help] <command> [args]

If you're just getting started with Terraform, stick with the
common commands. For the other commands, please read the help and docs before usage.

Common commands:
    apply              Builds or changes infrastructure
    console            Interactive console for Terraform interpolations
    destroy            Destroy Terraform-managed infrastructure
    env                Workspace management
    fmt                Rewrites config files to canonical format
    get                Download and install modules for the configuration
    graph              Create a visual graph of Terraform resources
    import             Import existing infrastructure into Terraform
    init               Initialize a Terraform working directory
    output             Read an output from a state file
    plan               Generate and show an execution plan
    providers          Prints a tree of the providers used in the configuration
    push               Upload this Terraform module to Atlas to run
    refresh            Update local state file against real resources
    show               Inspect Terraform state or plan
    taint              Manually mark a resource for recreation
    untaint            Manually unmark a resource as tainted
    validate           Validates the Terraform files
    version            Prints the Terraform version
    workspace          Workspace management

All other commands:
    debug              Debug output management (experimental)
    force-unlock       Manually unlock the terraform state
    state              Advanced state management
[root@localhost ~]#

[root@localhost ~]# terraform init
Terraform initialized in an empty directory!

The directory has no Terraform configuration files. You may begin working
with Terraform immediately by creating Terraform configuration files.
[root@localhost ~]#
[root@localhost ~]# ls -a
 .terraform.d

[root@localhost ~]#

... we will test and run the terraform to make virtual machines.

... we will need following three files.
... 1. terraform.tfvars:  Optional: if you have a large amount of variables
                          needs to be define. Apply by
                          terraform apply -var-file="terraform.tfvars"
... 2. instance.tf:       contains most of the infrastructure definition
... 3. variables.tf       contains the variables which can be passed into
                          the instance.tf file for processing.

... and the content of the files can be are below.

[root@localhost .terraform.d]# cat terraform.tfvars
vsphere_server = "172.16.17.130"
vsphere_user = "root"
vsphere_password = "your_password"
[root@localhost .terraform.d]#

[root@localhost .terraform.d]# cat variables.tf
variable "vsphere_server" {}
variable "vsphere_user" {}
variable "vsphere_password" {}
[root@localhost .terraform.d]#

[root@localhost terraform-test]# terraform init

Initializing provider plugins...
- Checking for available provider plugins on https://releases.hashicorp.com...
- Downloading plugin for provider "vsphere" (1.9.0)...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.vsphere: version = "~> 1.9"

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind ynou to do so if necessary.
[root@localhost terraform-test]#

... now running the following commands

[root@localhost terraform-test]# terraform plan --out=test2.plan

Warning: vsphere_virtual_machine.test2: "disk.0.name": [DEPRECATED]
The name attribute for virtual disks will be removed in favor of "label" in
future releases. To transition existing disks, rename the "name" attribute to
"label". When doing so, ensure the value of the attribute stays the same.

Note that "label" does not control the name of a VMDK and does not need to bear
the name of one on new disks or virtual machines. For more information, see the
documentation for the label attribute at:

https://www.terraform.io/docs/providers/vsphere/r/virtual_machine.html#label

Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.vsphere_datacenter.dc: Refreshing state...
data.vsphere_resource_pool.pool: Refreshing state...
data.vsphere_datastore.datastore: Refreshing state...
data.vsphere_network.mgmt_lan: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  + vsphere_virtual_machine.test2
      id:                                        <computed>
      boot_retry_delay:                          "10000"
      cdrom.#:                                   "1"
      cdrom.0.datastore_id:                      "5bf908bf-4f775d0a-7234-000c29992aae"
      cdrom.0.device_address:                    <computed>
      cdrom.0.key:                               <computed>
      cdrom.0.path:                              "./CentOS-7-x86_64-Minimal-1804.iso"
      change_version:                            <computed>
      cpu_limit:                                 "-1"
      cpu_share_count:                           <computed>
      cpu_share_level:                           "normal"
      datastore_id:                              "5bf908bf-4f775d0a-7234-000c29992aae"
      default_ip_address:                        <computed>
      disk.#:                                    "1"
      disk.0.attach:                             "false"
      disk.0.datastore_id:                       "<computed>"
      disk.0.device_address:                     <computed>
      disk.0.disk_mode:                          "persistent"
      disk.0.disk_sharing:                       "sharingNone"
      disk.0.eagerly_scrub:                      "false"
      disk.0.io_limit:                           "-1"
      disk.0.io_reservation:                     "0"
      disk.0.io_share_count:                     "0"
      disk.0.io_share_level:                     "normal"
      disk.0.keep_on_remove:                     "false"
      disk.0.key:                                "0"
      disk.0.name:                               "test2.vmdk"
      disk.0.path:                               <computed>
      disk.0.size:                               "16"
      disk.0.thin_provisioned:                   "true"
      disk.0.unit_number:                        "0"
      disk.0.uuid:                               <computed>
      disk.0.write_through:                      "false"
      ept_rvi_mode:                              "automatic"
      firmware:                                  "bios"
      force_power_off:                           "true"
      guest_id:                                  "centos7_64Guest"
      guest_ip_addresses.#:                      <computed>
      host_system_id:                            <computed>
      hv_mode:                                   "hvAuto"
      imported:                                  <computed>
      latency_sensitivity:                       "normal"
      memory:                                    "512"
      memory_limit:                              "-1"
      memory_share_count:                        <computed>
      memory_share_level:                        "normal"
      migrate_wait_timeout:                      "30"
      moid:                                      <computed>
      name:                                      "test2"
      nested_hv_enabled:                         "true"
      network_interface.#:                       "1"
      network_interface.0.adapter_type:          "vmxnet3"
      network_interface.0.bandwidth_limit:       "-1"
      network_interface.0.bandwidth_reservation: "0"
      network_interface.0.bandwidth_share_count: <computed>
      network_interface.0.bandwidth_share_level: "normal"
      network_interface.0.device_address:        <computed>
      network_interface.0.key:                   <computed>
      network_interface.0.mac_address:           <computed>
      network_interface.0.network_id:            "HaNetwork-VM Network"
      num_cores_per_socket:                      "1"
      num_cpus:                                  "1"
      reboot_required:                           <computed>
      resource_pool_id:                          "ha-root-pool"
      run_tools_scripts_after_power_on:          "true"
      run_tools_scripts_after_resume:            "true"
      run_tools_scripts_before_guest_shutdown:   "true"
      run_tools_scripts_before_guest_standby:    "true"
      scsi_bus_sharing:                          "noSharing"
      scsi_controller_count:                     "1"
      scsi_type:                                 "pvscsi"
      shutdown_wait_timeout:                     "3"
      swap_placement_policy:                     "inherit"
      uuid:                                      <computed>
      vapp_transport.#:                          <computed>
      vmware_tools_status:                       <computed>
      vmx_path:                                  <computed>
      wait_for_guest_net_routable:               "true"
      wait_for_guest_net_timeout:                "0"

Plan: 1 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: test2.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "test2.plan"

[root@localhost terraform-test]# terraform apply test2.plan
vsphere_virtual_machine.test2: Creating...
  boot_retry_delay:                          "" => "10000"
  cdrom.#:                                   "0" => "1"
  cdrom.0.datastore_id:                      "" => "5bf908bf-4f775d0a-7234-000c29992aae"
  cdrom.0.device_address:                    "" => "<computed>"
  cdrom.0.key:                               "" => "<computed>"
  cdrom.0.path:                              "" => "./CentOS-7-x86_64-Minimal-1804.iso"
  change_version:                            "" => "<computed>"
  cpu_limit:                                 "" => "-1"
  cpu_share_count:                           "" => "<computed>"
  cpu_share_level:                           "" => "normal"
  datastore_id:                              "" => "5bf908bf-4f775d0a-7234-000c29992aae"
  default_ip_address:                        "" => "<computed>"
  disk.#:                                    "0" => "1"
  disk.0.attach:                             "" => "false"
  disk.0.datastore_id:                       "" => "<computed>"
  disk.0.device_address:                     "" => "<computed>"
  disk.0.disk_mode:                          "" => "persistent"
  disk.0.disk_sharing:                       "" => "sharingNone"
  disk.0.eagerly_scrub:                      "" => "false"
  disk.0.io_limit:                           "" => "-1"
  disk.0.io_reservation:                     "" => "0"
  disk.0.io_share_count:                     "" => "0"
  disk.0.io_share_level:                     "" => "normal"
  disk.0.keep_on_remove:                     "" => "false"
  disk.0.key:                                "" => "0"
  disk.0.name:                               "" => "test2.vmdk"
  disk.0.path:                               "" => "<computed>"
  disk.0.size:                               "" => "16"
  disk.0.thin_provisioned:                   "" => "true"
  disk.0.unit_number:                        "" => "0"
  disk.0.uuid:                               "" => "<computed>"
  disk.0.write_through:                      "" => "false"
  ept_rvi_mode:                              "" => "automatic"
  firmware:                                  "" => "bios"
  force_power_off:                           "" => "true"
  guest_id:                                  "" => "centos7_64Guest"
  guest_ip_addresses.#:                      "" => "<computed>"
  host_system_id:                            "" => "<computed>"
  hv_mode:                                   "" => "hvAuto"
  imported:                                  "" => "<computed>"
  latency_sensitivity:                       "" => "normal"
  memory:                                    "" => "512"
  memory_limit:                              "" => "-1"
  memory_share_count:                        "" => "<computed>"
  memory_share_level:                        "" => "normal"
  migrate_wait_timeout:                      "" => "30"
  moid:                                      "" => "<computed>"
  name:                                      "" => "test2"
  nested_hv_enabled:                         "" => "true"
  network_interface.#:                       "0" => "1"
  network_interface.0.adapter_type:          "" => "vmxnet3"
  network_interface.0.bandwidth_limit:       "" => "-1"
  network_interface.0.bandwidth_reservation: "" => "0"
  network_interface.0.bandwidth_share_count: "" => "<computed>"
  network_interface.0.bandwidth_share_level: "" => "normal"
  network_interface.0.device_address:        "" => "<computed>"
  network_interface.0.key:                   "" => "<computed>"
  network_interface.0.mac_address:           "" => "<computed>"
  network_interface.0.network_id:            "" => "HaNetwork-VM Network"
  num_cores_per_socket:                      "" => "1"
  num_cpus:                                  "" => "1"
  reboot_required:                           "" => "<computed>"
  resource_pool_id:                          "" => "ha-root-pool"
  run_tools_scripts_after_power_on:          "" => "true"
  run_tools_scripts_after_resume:            "" => "true"
  run_tools_scripts_before_guest_shutdown:   "" => "true"
  run_tools_scripts_before_guest_standby:    "" => "true"
  scsi_bus_sharing:                          "" => "noSharing"
  scsi_controller_count:                     "" => "1"
  scsi_type:                                 "" => "pvscsi"
  shutdown_wait_timeout:                     "" => "3"
  swap_placement_policy:                     "" => "inherit"
  uuid:                                      "" => "<computed>"
  vapp_transport.#:                          "" => "<computed>"
  vmware_tools_status:                       "" => "<computed>"
  vmx_path:                                  "" => "<computed>"
  wait_for_guest_net_routable:               "" => "true"
  wait_for_guest_net_timeout:                "" => "0"
vsphere_virtual_machine.test2: Creation complete after 1s
(ID: 564d83c6-4871-6800-5709-48680862588c)

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
[root@localhost terraform-test]#

... after all the testing if we need to destroy the infrastructure and clean up,
... run "terraform cleanup"
