


... required portion of nginx.conf file.
             
http {

    upstream finland-masum {
        server 192.168.10.137:30010;
    }

// defining upstream server here with ip:port

server {

    location /finland {
         proxy_pass      http://finland-masum/;
         proxy_redirect default;
    }
 
}
}

... now i can browse http://kubernetes-master/finland nginx then pass the request to 
... upstream block finland-masum, which is running webserver in 192.168.10.137:30010
... and we can see the webpage.

... now we are going to add all the service running in my kubernetes

[root@kube-master nginx]# kubectl get svc
NAME                            CLUSTER-IP       EXTERNAL-IP   PORT(S)                       AGE
finland                         10.254.153.248   <nodes>       80:30010/TCP                  3h
hello-khabir-1239925653-572s0   10.254.148.255   <nodes>       80:32644/TCP                  16h
node-js                         10.254.106.57    <nodes>       80:30000/TCP                  1d
node-js-deploy                  10.254.209.124   <pending>     80:32039/TCP                  14h
node-nginx                      10.254.129.193   <nodes>       80:30002/TCP                  16h
[root@kube-master nginx]# 

... and my full nginx.conf related portion

http {

    upstream finland-masum {
        server 192.168.10.137:30010;   
    }
    upstream hello-khabir-masum {
        server 192.168.10.137:32644;   
    }
    upstream node-js-masum {
        server 192.168.10.137:30000;   
    }
    upstream node-js-deploy-masum {
        server 192.168.10.137:32039;   
    }
    upstream node-nginx-masum {
        server 192.168.10.137:30002;   
    }

    server {
        location /finland {
                proxy_pass      http://finland-masum/;
                proxy_redirect default;
        }
        location /hello-khabir {
                proxy_pass      http://hello-khabir-masum/;
                proxy_redirect default;
        }
        location /node-js {
                proxy_pass      http://node-js-masum/;
                proxy_redirect default;
        }
        location /node-js-deploy {
                proxy_pass      http://node-js-deploy-masum/;
                proxy_redirect default;
        }
        location /node-nginx {
                proxy_pass      http://node-nginx-masum/;
                proxy_redirect default;
        }

}
}

... now we can browse using following url. 192.168.10.138 is the server 
... where the nginx is running.
... for my instance this is also where the kube-master node is running.

[root@kube-master nginx]# lynx http://192.168.10.138/node-js

Container Info v0.5

   Host:node-js-fzt9h
   Running OS:linux
   Uptime:165
   Network Information:172.17.54.2, fe80::42:acff:fe11:3602
   DNS Servers:192.168.25.2

[root@kube-master nginx]# lynx http://192.168.10.138/hello-khabir

                                                  Hello world!

  My hostname is hello-khabir-1239925653-572s0

  Links found

   NODE_NGINX listening in 80 available at tcp://10.254.129.193:80
   NODE_JS listening in 80 available at tcp://10.254.106.57:80
   TRAEFIK_INGRESS_SERVICE listening in 80 available at tcp://10.254.31.232:80
   NODE_JS_DEPLOY listening in 80 available at tcp://10.254.209.124:80
   HELLO_KHABIR_1239925653_572S0 listening in 80 available at tcp://10.254.148.255:80
   KUBERNETES listening in 443 available at tcp://10.254.0.1:443
   TRAEFIK_INGRESS_SERVICE listening in 8080 available at tcp://10.254.31.232:8080
   FINLAND listening in 80 available at tcp://10.254.217.96:80


... similarly we have found the page using by following 

[root@kube-master nginx]# lynx http://192.168.10.138/node-js-deploy
[root@kube-master nginx]# lynx http://192.168.10.138/finland
[root@kube-master nginx]# lynx http://192.168.10.138/node-nginx

... error of the following is solved by disabling selinux by using setenforce 0

 2017/12/28 10:48:45 [crit] 15398#0: *11 connect() to 192.168.10.137:30010 
 failed (13: Permission denied) while connecting to upstream, client: 192.168.10.1, 
 server: _, request: "GET /finland HTTP/1.1", 
 upstream: "http://192.168.10.137:30010/", host: "192.168.10.138"

[root@kube-master nginx]# setenforce 0




