Introduction

This article will walk you through setting up a server with Python 3, MySQL, and Apache2, sans the help of a framework. By the end of this tutorial, you will be fully capable of launching a barebones system into production.

Django is often the one-shop-stop for all things Python; it's compatible with nearly all versions of Python, comes prepackaged with a custom server, and even features a one-click-install database. Setting up a vanilla system without this powerful tool can be tricky, but earns you invaluable insight into server structure from the ground up.

This tutorial uses only package installers, namely apt-get and Pip. Package installers are simply small programs that make code installations much more convenient and manageable. Without them, maintaining libraries, modules, and other code bits can become an extremely messy business.

Prerequisites
To follow this tutorial, you will need:

One Ubuntu 14.04 Droplet.
A sudo non-root user, which you can set up by following this tutorial.
Step 1 — Making Python 3 the Default
In this step, we will set Python 3 as the default for our python command.

First, check your current Python version.

python --version
On a fresh Ubuntu 14.04 server, this will output:

Python 2.7.6
We would like to have python run Python 3. So first, let's remove the old 2.7 binary.

sudo rm /usr/bin/python
Next, create a symbolic link to the Python 3 binary in its place.

sudo ln -s /usr/bin/python3 /usr/bin/python
If you run python --version again, you will now see Python 3.4.0.

Step 2 — Installing Pip
In this section, we will install Pip, the recommended package installer for Python.

First, update the system's package index. This will ensure that old or outdated packages do not interfere with the installation.

sudo apt-get update
Pip allows us to easily manage any Python 3 package we would like to have. To install it, simply run the following:

sudo apt-get install python3-pip
For an overview of Pip, you can read this tutorial.

For an overview of Pip, you can read this tutorial.

Step 3 — Installing MySQL
In this section, we will install and configure MySQL.

Installing SQL is simple:

sudo apt-get install mysql-server
Enter a strong password for the MySQL root user when prompted, and remember it, because we will need it later.

The MySQL server will start once installation completes. After installation, run:

mysql_secure_installation
This setup will take you through a series of self-explanatory steps. First, you'll need to enter the root password you picked a moment ago. The first question will ask if you want to change the root password, but because you just set it, enter n. For all other questions, press ENTER to accept the default response.

Python 3 requires a way to connect with MySQL, however. There are a number of options, like MySQLclient, but for the module's simplicity, this tutorial will use pymysql. Install it using Pip:

sudo pip3 install pymysql
