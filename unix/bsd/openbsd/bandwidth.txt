


............................. bandwidth management ..............................

.. the traffic shaping system used in openbsd is ALTQ or alternate traffic queue.

.. queue concept.
.. queue is the buffer for the network packets. in other way holding place for the
.. network packets. this queue holds packet untill either they dropped or send to
.. specific destination. queue is attached to interface and the bandwidth to inter
.. face then subdivided.

.. these queue can be allocated with bandwidth. some queue are served with priority
.. that means these queues will be processed with shorter delay before other. these
.. queues can be sub child of the other queues. some queues are combination of
.. bandwidth and the priority.

.. with no altq place, tcp/ip stack processes the packet as they appears like fifo
.. first in first out ie in order. there are three queue schedular algorithms. they
.. are priq, cbq and hfsc.

.. priq
.. the priority based queue gives the preference over other queue based on number
.. starting from 0 to 15. the higher is better.

.. cbq
.. cbq is the fixed based queue management where measurement is done on available
.. bandwidth in kilobit,megabit,gigabit wise. the queues in cbq can be also
.. subqueues with priority from 0 to 7. same as priq, cbq of higher priority will
.. served first than queue with lower priority.

.. hfsc
.. hierarchical fair service curve, ensures the fair allocation of bandwith among
.. the queues. as it has tunable parameters but most altq practioners like to
.. keep them simple. it has also priority number 0 to 7.

.. setting up the queue.
..
.. note here: on openbsd6 they simplified the queue and bandwidth syntax drastically
.. more information can be found by the following.

-bash-4.3# man 5 pf.conf

.. my pf.conf file has the following configuration.

-bash-4.3# cat -n pf.conf
     1  #       $OpenBSD: pf.conf,v 1.54 2014/08/23 05:49:42 deraadt Exp $
     2  #
     3  # See pf.conf(5) and /etc/examples/pf.conf
     4
     5
     6  set skip on lo
     7
    11  ext_if = em0
    12  int_if = vic0
    13
    14
    15  localnet = $int_if:network
    16
    25  # my queue defination is as flows

.. at the first we set up an parent queue rootq with the bandwith 100M

    26  queue rootq on $ext_if bandwidth 100M max 100M

.. then std is under rootq as rootq is the parent of std queue and
.. allocated the bandwidth. same as httpq, dnsq and icmpq all are assigned
.. bandwidth as well as parent queue.

    27  queue std parent rootq bandwidth 20M max 20M default
    28  queue httpq parent rootq bandwidth 500K max 1M
    29  queue dnsq parent rootq bandwidth 500K max 1M
    30  queue icmpq parent rootq bandwidth 100K max 100K
    32
    34  udp_services = "{ domain, ntp }"
    36  client_services = "{ ftp, ssh, smtp, domain, www, pop3, auth, https, pop3s }"
    37
    38  block all
    40  pass on $ext_if proto tcp to port { www, https }
    41

.. following we set queue httpq on  pass rule

    43  pass on $ext_if proto tcp to port { www, https } set queue httpq
    47  pass log (all) proto tcp to port $client_services
    48  pass log (all) quick inet proto { tcp, udp } to port $udp_services label "dns" set queue dnsq
..
.. icmp traffic set the icmp queue

    52  pass log (all) proto icmp set queue icmpq
    53
    54
    64  #table <masum> persist file "/etc/hosts"
    65  # By default, do not permit remote connections to X11
    66  block return in on ! lo0 proto tcp to port 6000:6010

-bash-4.3#

-bash-4.3# pfctl -d
pf disabled
-bash-4.3# pfctl -evf /etc/pf.conf
set skip on { lo }
ext_if = "em0"
int_if = "vic0"
localnet = "vic0:network"
table <webserver> persist { 192.168.244.132 192.168.244.147 }
udp_services = "{ domain, ntp }"
client_services = "{ ftp, ssh, smtp, domain, www, pop3, auth, https, pop3s }"
queue rootq on em0 bandwidth 100M, max 100M
queue httpq parent rootq bandwidth 500K, max 1M default
queue dnsq parent rootq bandwidth 500K, max 1M
queue icmpq parent rootq bandwidth 100K, max 100K
block drop all
match in on em0 proto tcp from any to any port = 80 rdr-to <webserver> round-robin
match in on em0 proto tcp from any to any port = 443 rdr-to <webserver> round-robin
pass on em0 proto tcp from any to any port = 80 flags S/SA
pass on em0 proto tcp from any to any port = 443 flags S/SA
pass on em0 proto tcp from any to any port = 80 flags S/SA set ( queue httpq )
pass on em0 proto tcp from any to any port = 443 flags S/SA set ( queue httpq )
pass log (all) proto tcp from any to any port = 21 flags S/SA
pass log (all) proto tcp from any to any port = 22 flags S/SA
pass log (all) proto tcp from any to any port = 25 flags S/SA
pass log (all) proto tcp from any to any port = 53 flags S/SA
pass log (all) proto tcp from any to any port = 80 flags S/SA
pass log (all) proto tcp from any to any port = 110 flags S/SA
pass log (all) proto tcp from any to any port = 113 flags S/SA
pass log (all) proto tcp from any to any port = 443 flags S/SA
pass log (all) proto tcp from any to any port = 995 flags S/SA
pass log (all) quick inet proto tcp from any to any port = 53 flags S/SA set ( queue dnsq ) label "dns"
pass log (all) quick inet proto tcp from any to any port = 123 flags S/SA set ( queue dnsq ) label "dns"
pass log (all) quick inet proto udp from any to any port = 53 set ( queue dnsq ) label "dns"
pass log (all) quick inet proto udp from any to any port = 123 set ( queue dnsq ) label "dns"
pass log (all) proto icmp all set ( queue icmpq )
block return in on ! lo0 proto tcp from any to any port 6000:6010
pf enabled
-bash-4.3#

.. seems like all good.

.. related log of queue

-bash-4.3# systat queue

    6 users    Load 0.27 0.28 0.25                     Mon Nov 14 02:00:17 2016

QUEUE                             BW SCH  PRIO     PKTS    BYTES   DROP_P   DROP_B QLEN BORROW SUSPEN     P/S     B/S
rootq on em0                    100M                  0        0        0        0    0                     0       0
 std                             20M                 18     5224        0        0    0                   0.2      39
 httpq                          500K                  0        0        0        0    0                     0       0
 dnsq                           500K                  8      720        0        0    0                     0       0
 icmpq                          100K                 32     3136        0        0    0                   1.0      96

.. now setting the priority on traffic in my pf.conf file

pass log (all) proto tcp to port $client_services set (queue std, prio (1,7))

.. the explanation i have found in pf.conf manpage on setting priority was following

             if two priorities are given, packets which have a TOS of lowdelay and
             TCP ACKs with no data payload will be assigned to the second one.
             Packets with a higher priority number are processed first, and
             packets with the same priority are processed in the order in
             which they are received.

             For example:

                   pass in proto tcp to port 25 set prio 2

.. setting mail traffic priority 2 while below ssh traffic given two priority of
.. 2 as well as 5 from 0 to 7.

                   pass in proto tcp to port 22 set prio (2, 5)

-bash-4.3# systat queue
