

... linux tc calculate the bandwidth by following

mbps = 1024 kbps = 1024*1024 bps => byte/s
mbit = 1024 kbit => kilo bit/s.
mb = 1024 kb = 1024*1024 b => byte
mbit = 1024 kbit => kilo bit.

... we can only shape the data what we are transmitting.

... the classless queueing technique pfifo_fast has 3 bands.
... as long as band 0 has data it will not process band 1, and
... same as band 2 will not be processes until it has data on band 1.
... as this one is classless we cant attach other qdisc to this.

... we cant configure pfifo_fast as this one is wired default
... this task is for kernel to configure and handle this.

root@deb-7:~# tc qdisc show
qdisc pfifo_fast 0: dev eth0 root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
qdisc pfifo_fast 0: dev eth1 root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
root@deb-7:~#

... 1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1 is some parameters how default pfifo_fast
... qdisc handles the tos bits. tc cant configure this parameters as
... it is kernel job.

... SFQ
... sfq has different pifo queue for the flow(session) say one for the tcp and another for
... udp. it likely to send the data round robin for the flow from queue. actually it has
... a hashing algorithm to divide the data to subqueue.

... few settings and parameters

... perturb: time interval in second on which hashing will change. 10s
... probably the good time.

... quantum: dont set the quantum less than MTU

... limit: number of packets to be in queue. after that packet will drop.

... example of simple sfq


root@deb-7:~# tc qdisc add dev eth1 root sfq perturb 10
root@deb-7:~#
root@deb-7:~# tc -s -d qdisc ls
qdisc pfifo_fast 0: dev eth0 root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
 Sent 6840 bytes 54 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0

qdisc sfq 8001: dev eth1 root refcnt 2 limit 127p quantum 1514b flows 127/1024 divisor 1024 perturb 10sec
 Sent 558 bytes 5 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0
root@deb-7:~#


root@deb-7:~# ping 192.168.179.1
PING 192.168.179.1 (192.168.179.1) 56(84) bytes of data.
64 bytes from 192.168.179.1: icmp_req=1 ttl=128 time=1.42 ms
64 bytes from 192.168.179.1: icmp_req=2 ttl=128 time=0.552 ms
64 bytes from 192.168.179.1: icmp_req=3 ttl=128 time=0.407 ms
64 bytes from 192.168.179.1: icmp_req=4 ttl=128 time=0.437 ms
^C
--- 192.168.179.1 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3001ms
rtt min/avg/max/mdev = 0.407/0.706/1.428/0.420 ms
root@deb-7:~#
root@deb-7:~#
root@deb-7:~# tc -s -d qdisc ls
qdisc pfifo_fast 0: dev eth0 root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
 Sent 6840 bytes 54 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0

qdisc sfq 8001: dev eth1 root refcnt 2 limit 127p quantum 1514b flows 127/1024 divisor 1024 perturb 10sec
 Sent 6552 bytes 56 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0
root@deb-7:~#
root@deb-7:~#

... note here the packets go. 8001 is the handler number. and limit 127packet
... can be placed in queue. and bucket size is 1024 on which 127 packets are waiting
... and in every 10s the hash will reconfigure.

... some terminology
... Queueing Discipline (qdisc)
... An algorithm that manages the queue of a device, either incoming (ingress) or outgoing (egress).

... root qdisc
... The root qdisc is the qdisc attached to the device.

... Classless qdisc
... A qdisc with no configurable internal subdivisions

... Classful qdisc
... which has sub classless. according to practical nature pifo_fast is classful
... as it has three subordinate bands. and it class less as it cant be attached
... to tc.

... classes
... classes as parent may have other child classes. child classes can have qdisc.
... this child class can send data. when we we attach one child class to any of
... class, qdisc attach to it removed. fifo qdisc can be replaced with any suitable
... qdisc.

... classifier
... this one needed by qdisc to decide to which class qdisc needs to send data.

... CBQ, class based queueing, a thought to be classful
... when packets arrive they needs to be classified and enqueue. to do so filters
... from the queues are used and stored in the queues.

... The qdisc family: roots, handles, siblings and parents
... each interface has one default pfifo type default root qdisc. handle which is
... used to indicates the qdisc it has the <major>:<minor> format.
... It is customary to name the root qdisc ’1:’, which is equal to ’1:0’. The minor
... number of a qdisc is always 0.Classes need to have the same major number as their parent.

... PRIO
... prio qdisc is something only just prioritize the queue, it does not
... shape any traffic. it will add three default queue to them.

... parameters of prio
... band: number of band to create. this will be used with priomap.

... sample configuration

    1:       root qdisc
  / | \
 /  |  \
/   |   \
1:1 1:2 1:3  classes
|   |    |
10: 20: 30:  qdiscs
sfq tbf sfq
 0  1   2    band

# tc qdisc add dev eth1 root handle 1: prio
## This * instantly*creates classes 1:1, 1:2, 1:3

# tc qdisc add dev eth1 parent 1:1 handle 10: sfq
# tc qdisc add dev eth1 parent 1:2 handle 20: tbf rate 20kbit buffer 1600 limit 3000
# tc qdisc add dev eth1 parent 1:3 handle 30: sfq



root@deb-7:~# tc qdisc add dev eth1 root handle 1: prio

... ## This * instantly* creates classes 1:1, 1:2, 1:3 ...

root@deb-7:~# tc qdisc list
qdisc pfifo_fast 0: dev eth0 root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
qdisc prio 1: dev eth1 root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
root@deb-7:~#
root@deb-7:~# tc qdisc add dev eth1 parent 1:1 handle 10: sfq
root@deb-7:~# tc qdisc add dev eth1 parent 1:2 handle 20: tbf rate 20kbit buffer 1600 limit 3000
root@deb-7:~# tc qdisc add dev eth1 parent 1:3 handle 30: sfq
root@deb-7:~#

... In general (not just for HTB but for all qdiscs and classes in tc), handles are written x:y where x
... is an integer identifying a qdisc and y is an integer identifying a class belonging to that qdisc. The
... handle for a qdisc must have zero for its y value and the handle for a class must have a non-zero value
... for its y value. The "1:" above is treated as "1:0". for example see above. The minor number of a qdisc
... is always 0.

root@deb-7:~# tc -s qdisc ls dev eth1
qdisc prio 1: root refcnt 2 bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1
 Sent 8710 bytes 81 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0

qdisc sfq 10: parent 1:1 limit 127p quantum 1514b divisor 1024
 Sent 5276 bytes 50 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0

qdisc tbf 20: parent 1:2 rate 20000bit burst 1600b lat 560.0ms
 Sent 42 bytes 1 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0

qdisc sfq 30: parent 1:3 limit 127p quantum 1514b divisor 1024
 Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0)
 backlog 0b 0p requeues 0
root@deb-7:~#
