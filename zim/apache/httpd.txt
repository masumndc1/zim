

... my system is

[root@puppet ~]# uname -a
Linux puppet 4.9.39-29.el7.x86_64 #1 SMP Fri Jul 21 15:09:00 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
[root@puppet ~]#

... installed http related packages are

[root@puppet ~]# rpm -qa | grep http
httpd-tools-2.4.6-45.el7.centos.4.x86_64
httpd-2.4.6-45.el7.centos.4.x86_64
[root@puppet ~]#

... making httpd service enable at boot time

[root@puppet ~]# chkconfig httpd on
Note: Forwarding request to 'systemctl enable httpd.service'.
[root@puppet ~]#
[root@puppet ~]# systemctl enable httpd.service
[root@puppet ~]#
[root@puppet ~]# systemctl list-unit-files | grep httpd
httpd.service                                 enabled
[root@puppet ~]#

[root@puppet ~]# service httpd status
Redirecting to /bin/systemctl status  httpd.service
● httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)
   Active: active (running) since Sat 2017-08-05 07:02:57 +06; 6min ago
     Docs: man:httpd(8)
           man:apachectl(8)
 Main PID: 1083 (httpd)
   Status: "Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec"
   CGroup: /system.slice/httpd.service
           ├─1083 /usr/sbin/httpd -DFOREGROUND
           ├─1621 /usr/sbin/httpd -DFOREGROUND
           ├─1622 /usr/sbin/httpd -DFOREGROUND
           ├─1625 /usr/sbin/httpd -DFOREGROUND
           ├─1629 /usr/sbin/httpd -DFOREGROUND
           └─1630 /usr/sbin/httpd -DFOREGROUND

Aug 05 07:02:51 puppet systemd[1]: Starting The Apache HTTP Server...
Aug 05 07:02:56 puppet httpd[1083]: AH00558: httpd: Could not reliably determine the server's fully qualified domain 
Aug 05 07:02:57 puppet systemd[1]: Started The Apache HTTP Server.
Hint: Some lines were ellipsized, use -l to show in full.
[root@puppet ~]#

[root@puppet ~]# cd /etc/httpd/
[root@puppet httpd]# ls
conf  conf.d  conf.modules.d  logs  modules  run
[root@puppet httpd]# cd conf
[root@puppet conf]# ls
httpd.conf  magic
[root@puppet conf]# cat httpd.conf | egrep -i servername
ServerName www.example.com:80
[root@puppet conf]#

[root@puppet conf]# service httpd restart
Redirecting to /bin/systemctl restart  httpd.service
[root@puppet conf]#

... puppet also saying the same that httpd is running and enabled at the boot time.

[root@puppet conf]# puppet resource service httpd
service { 'httpd':
  ensure => 'running',
  enable => 'true',
}
[root@puppet conf]#

... directory permission in httpd
... the following is one example of directory and its applicable option.

<Directory "/var/www/html">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   Options FileInfo AuthConfig Limit
    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #

    Require all granted
</Directory>

# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html index.py index.sh
</IfModule>

# Aliases: Add here as many aliases as you need (with no limit). The format is
# Alias fakename realname
#

Alias /icons/ "/var/www/icons/"
<Directory "/var/www/icons">
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

# fancy indexing

<Directory "/var/www/html/khabir/">
    Options Indexes FollowSymLinks
    IndexOptions FancyIndexing VersionSort NameWidth=* HTMLTable
    AllowOverride None
    Require all granted
</Directory>


[root@puppet html]# type httpd
httpd is /usr/sbin/httpd
[root@puppet html]#
[root@puppet html]# htt
httpd      httxt2dbm
[root@puppet html]# httpd -t
Syntax OK
[root@puppet html]# httpd -h
Usage: httpd [-D name] [-d directory] [-f file]
             [-C "directive"] [-c "directive"]
             [-k start|restart|graceful|graceful-stop|stop]
             [-v] [-V] [-h] [-l] [-L] [-t] [-T] [-S] [-X]
Options:
  -D name            : define a name for use in <IfDefine name> directives
  -d directory       : specify an alternate initial ServerRoot
  -f file            : specify an alternate ServerConfigFile
  -C "directive"     : process directive before reading config files
  -c "directive"     : process directive after reading config files
  -e level           : show startup errors of level (see LogLevel)
  -E file            : log startup errors to file
  -v                 : show version number
  -V                 : show compile settings
  -h                 : list available command line options (this page)
  -l                 : list compiled in modules
  -L                 : list available configuration directives
  -t -D DUMP_VHOSTS  : show parsed vhost settings
  -t -D DUMP_RUN_CFG : show parsed run settings
  -S                 : a synonym for -t -D DUMP_VHOSTS -D DUMP_RUN_CFG
  -t -D DUMP_MODULES : show all loaded modules
  -M                 : a synonym for -t -D DUMP_MODULES
  -t                 : run syntax check for config files
  -T                 : start without DocumentRoot(s) check
  -X                 : debug mode (only one worker, do not detach)
[root@puppet html]#

[root@puppet html]# httpd -v
Server version: Apache/2.4.6 (CentOS)
Server built:   Apr 12 2017 21:03:28
[root@puppet html]#
[root@puppet html]# httpd -V
Server version: Apache/2.4.6 (CentOS)
Server built:   Apr 12 2017 21:03:28
Server's Module Magic Number: 20120211:24
Server loaded:  APR 1.4.8, APR-UTIL 1.5.2
Compiled using: APR 1.4.8, APR-UTIL 1.5.2
Architecture:   64-bit
Server MPM:     prefork
  threaded:     no
    forked:     yes (variable process count)
Server compiled with....
 -D APR_HAS_SENDFILE
 -D APR_HAS_MMAP
 -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)
 -D APR_USE_SYSVSEM_SERIALIZE
 -D APR_USE_PTHREAD_SERIALIZE
 -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT
 -D APR_HAS_OTHER_CHILD
 -D AP_HAVE_RELIABLE_PIPED_LOGS
 -D DYNAMIC_MODULE_LIMIT=256
 -D HTTPD_ROOT="/etc/httpd"
 -D SUEXEC_BIN="/usr/sbin/suexec"
 -D DEFAULT_PIDLOG="/run/httpd/httpd.pid"
 -D DEFAULT_SCOREBOARD="logs/apache_runtime_status"
 -D DEFAULT_ERRORLOG="logs/error_log"
 -D AP_TYPES_CONFIG_FILE="conf/mime.types"
 -D SERVER_CONFIG_FILE="conf/httpd.conf"
[root@puppet html]#

... virtual server. configuration taken from linux bible

NameVirtualHost *:80
<VirtualHost *:80>
     DocumentRoot /var/www/handsonhistory
     ServerName www.handsonhistory.com
     ServerAlias handsonhistory.com
     ServerAdmin webmaster@handsonhistory.com
     ErrorLog logs/handsonhistory.com-error_log
     CustomLog logs/handsonhistory.com-access_log common
</VirtualHost>

<VirtualHost *:80>
     DocumentRoot /var/www/linuxtoys
     ServerName www.linuxtoys.net
     ServerAlias linuxtoys.net
     ServerAdmin webmaster@linuxtoys.net
     ErrorLog logs/linuxtoys.net-error_log
     CustomLog logs/linuxtoys.net-access_log common
</VirtualHost>

... server status
# server status and server info
<Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from 127.0.0.1 192.168.10.0/24
</Location>

<Location /server-info>
    SetHandler server-info
    Order deny,allow
    Deny from all
    Allow from 127.0.0.1 192.168.10.0/24
</Location>

... if you want to enable extended status

# enabling extended status
ExtendedStatus On

... viewing usage with webalizer

# yum install webalizer

... Based on the information in the /etc/webalizer.conf file, the /var/log/httpd/access_log 
... log file is read and an index.html file is copied to the /var/www/html/webalizer directory. 
... therefore making permission on that directory.

... we have following settings in the /etc/webalizer.conf file

[root@puppet html]# cat /etc/webalizer.conf | grep -i outputdir
#OutputDir      /var/www/html/usage
OutputDir      /var/www/html/webalizer
[root@puppet html]# 
[root@puppet html]# webalizer

<Directory "/var/www/html/webalizer/">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# lynx http://<web_server_address>/webalizer

... password protected web directory 

[root@puppet html]# htpasswd --help
Usage:
	htpasswd [-cimBdpsDv] [-C cost] passwordfile username
	htpasswd -b[cmBdpsDv] [-C cost] passwordfile username password

	htpasswd -n[imBdps] [-C cost] username
	htpasswd -nb[mBdps] [-C cost] username password

 -c  Create a new file.

... therefore use -c for the first time only.
... dont use -c options for creating any further user creation.

[root@puppet html]# htpasswd -c /etc/httpd/.htpasswd masum
New password:
Re-type new password:
Adding password for user masum
[root@puppet html]#
[root@puppet html]# cat /etc/httpd/.htpasswd
masum:$sini93ysnusXm4v$yvO.8lpW6nq9moBl1NTOm.
[root@puppet html]#

... now do the following

<Directory "/var/www/html/webalizer">
        AuthType Basic
        AuthName "Restricted Content"
        AuthUserFile /etc/httpd/.htpasswd
        Require valid-user
</Directory>

... thats it



