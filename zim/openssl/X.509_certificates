

.... introduction

... certificate is a RSA digital footprint which gives the indentity of person
... host or even computer. it has time period for which it will be valid. 
... certificate has also the information where to verify it.

... As we have told before that certificate hold the identity of a person
... or even host computer. one of the identity example is given below
... for a human.

C=Ca, ST=Ontario, L=Toronto, O=Xelerance, OU=Support Staff, CN=Naomi Rae, 
E=support@xelerance.com

... this identity as full form is called the distinguished name or DN.
... the one object of dn is called the relative distinguished name or RDN.
... here C=CA is an example of RDN. a dn is written as a collection of rdn
... separated by comma(,) or slash(/). certificate are written in the form 
... of X.509 standard. therefore certificates normally refered to x.509 
... certificate. x.509 certificate are written in a machine parsable format
... of Abstract Syntax Notation One(ASN.1) which then wrapped with public
... key cryptographic standard(PKCS). this pksc also has various version too.

... as machine read able asn1 format, sometimes mis interpreted with system
... to system transfer, ascii format is used. therefore there are formate 
... of ascii form of certificate. DER which is commonly used with OpenLDAP,
... and base-64 PEM formate. ssl/https uses the later formate. those two 
... are ascii compatible form of certificate.

.... types of certificates.

... the certificates one party present to other may ask for verification to
... the organization who has signed it. the organization is called certificate
... authorities or CA. there are many ca who sign certificates. they can be
... paid or non-profit like CAcert.org. the certificate itself contains the 
... information where to request for verification. 

... certificate can be self signed. this self signed certificate can be 
... generated by many tools. one of the popular opensource tools is openssl.

... CA certificate or root certificate, the two name of the same thing signs 
... itself. 

... CSR certificate sign request: its a self signed certificate which then 
... send to a CA with the request to sign it.

... key files: this is key file of .pem format for public key.
... and .key file is for the private key. this can be passphrase protected.

... PKCS#12 (.pl formate):  Certificate plus private key issued and signed by a CA.
... Normally passphrase protected. 

... PKCS#15 Certificate: certificate with Cryptographic Tokens standard.

... CRL: Certificate Revocation List, a list which contains serial number of 
... revoked certificates. revokation can be as expired or withdrawn as purpose
... served.

.... generating certificate using openssl.

... we will be using openssl command line tool to generate x.509 certificate there
... are web based tools like tinyca although.

... first we have to pay special attention to the timing of the system where
... the certificate will be used. timing mismatch is a big issue which will
... resist certificate to load. we can use ntp to synchronize the clock. 

... then we will use different configuration file for openssl when
... we are generating certificate for various purpose. like one configure file
... for https and another for doing vpn. we can tell openssl to which configuration
... file to use and where to store the generated certificate file.

... To use your own openssl.cnffile, set the environment variable OPENSSL_CONF: 

root@deb-7:~# export OPENSSL_CONF=/location/openssl.cnf 

Alternatively, use -config /path/to/your/openssl.cnf in all your OpenSSL commands.

... currently we have the following openssl.cnf file loaded in our system

root@deb-7:~# locate openssl.cnf
/etc/ssl/openssl.cnf
/root/libreswan/testing/baseconfigs/nic/etc/openssl/openssl.cnf.in
/root/libreswan/testing/utils/openssl.cnf
/root/libreswan/testing/x509/openssl.cnf
/root/libreswan-3.19/testing/baseconfigs/nic/etc/openssl/openssl.cnf.in
/root/libreswan-3.19/testing/utils/openssl.cnf
/root/libreswan-3.19/testing/x509/openssl.cnf
/root/libreswan-3.20/testing/baseconfigs/nic/etc/openssl/openssl.cnf.in
/root/libreswan-3.20/testing/utils/openssl.cnf
/root/libreswan-3.20/testing/x509/openssl.cnf
/usr/lib/ssl/openssl.cnf
root@deb-7:~# 

... the current default location and configuration file of the openssl are

root@deb-7:/etc/ssl# ls
certs  openssl.cnf  private
root@deb-7:/etc/ssl# cd private/
root@deb-7:/etc/ssl/private# ls
ssl-cert-snakeoil.key
root@deb-7:/etc/ssl/private# 

... current openssl.cnf configuration file is saying that new installed certificate
... will be placed under ./demoCA directory. we can change this either changing
... dir value in openssl.cnf file or providing dir options with openssl cli.
 
root@deb-7:/etc/ssl# cat openssl.cnf | grep -i dir
dir             = ./demoCA              # Where everything is kept
certs           = $dir/certs            # Where the issued certs are kept
crl_dir         = $dir/crl              # Where the issued crl are kept
database        = $dir/index.txt        # database index file.
new_certs_dir   = $dir/newcerts         # default place for new certs.
certificate     = $dir/cacert.pem       # The CA certificate
serial          = $dir/serial           # The current serial number
crlnumber       = $dir/crlnumber        # the current crl number
crl             = $dir/crl.pem          # The current CRL
private_key     = $dir/private/cakey.pem# The private key
RANDFILE        = $dir/private/.rand    # private random number file
dir             = ./demoCA              # TSA root directory
serial          = $dir/tsaserial        # The current serial number (mandatory)
signer_cert     = $dir/tsacert.pem      # The TSA signing certificate
certs           = $dir/cacert.pem       # Certificate chain to include in reply
signer_key      = $dir/private/tsakey.pem # The TSA private key (optional)
root@deb-7:/etc/ssl# 

... now at the time of creating the certificate with openssl we will use
... different openssl.cnf file and change the directory value where to store
... the certificate file.

root@deb-7:~# mkdir masum_cert
root@deb-7:~/masum_cert# pwd
/root/masum_cert
root@deb-7:~# cd masum_cert/
root@deb-7:~/masum_cert# cp /usr/lib/ssl/openssl.cnf .
root@deb-7:~/masum_cert# ls
openssl.cnf
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# cat -n openssl.cnf | grep -i country
    85  countryName             = match
    96  countryName             = optional
   128  countryName                     = Country Name (2 letter code)
   129  #countryName_default            = AU
   130  countryName_default             = BD
   131  countryName_min                 = 2
   132  countryName_max                 = 2
root@deb-7:~/masum_cert# 

... as well as we have set some settings in openssl.cnf file like below

root@deb-7:~/masum_cert# cat openssl.cnf

   127  [ req_distinguished_name ]
   128  countryName                     = Country Name (2 letter code)
   130  countryName_default             = BD
   131  countryName_min                 = 2
   132  countryName_max                 = 2
   134  stateOrProvinceName             = State or Province Name (full name)
   135  stateOrProvinceName_default     = Some-State
   137  #localityName                   = Locality Name (eg, city)
   138  localityName_default            = dhaka
   147  organizationalUnitName          = Organizational Unit Name (eg, section)
   148  #organizationalUnitName_default =
   150  commonName                     = Common Name (e.g. server FQDN or YOUR name)
   151  commonName_default              = deb79
   152  commonName_max                  = 64
   154  emailAddress                   = Email Address
   155  emailAddress_default            = deb79@gmail.com
   156  emailAddress_max                = 64

root@deb-7:~/masum_cert# 
   
... options involved with openssl command

root@deb-7:~/masum_cert# openssl --help
openssl:Error: '--help' is an invalid command.

Standard commands
asn1parse         ca                ciphers           cms               
crl               crl2pkcs7         dgst              dh                
dhparam           dsa               dsaparam          ec                
ecparam           enc               engine            errstr            
gendh             gendsa            genpkey           genrsa            
nseq              ocsp              passwd            pkcs12            
pkcs7             pkcs8             pkey              pkeyparam         
pkeyutl           prime             rand              req               
rsa               rsautl            s_client          s_server          
s_time            sess_id           smime             speed             
spkac             srp               ts                verify            
version           x509              

Message Digest commands (see the `dgst' command for more details)
md4               md5               rmd160            sha               
sha1              

Cipher commands (see the `enc' command for more details)
aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb       
aes-256-cbc       aes-256-ecb       base64            bf                
bf-cbc            bf-cfb            bf-ecb            bf-ofb            
camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  camellia-192-ecb  
camellia-256-cbc  camellia-256-ecb  cast              cast-cbc          
cast5-cbc         cast5-cfb         cast5-ecb         cast5-ofb         
des               des-cbc           des-cfb           des-ecb           
des-ede           des-ede-cbc       des-ede-cfb       des-ede-ofb       
des-ede3          des-ede3-cbc      des-ede3-cfb      des-ede3-ofb      
des-ofb           des3              desx              rc2               
rc2-40-cbc        rc2-64-cbc        rc2-cbc           rc2-cfb           
rc2-ecb           rc2-ofb           rc4               rc4-40            
seed              seed-cbc          seed-cfb          seed-ecb          
seed-ofb          zlib              

root@deb-7:~/masum_cert# 

... moreover that we should have following files and proper directory
... created prior to make certificates.
 
root@deb-7:~/masum_cert# cd demoCA/
root@deb-7:~/masum_cert/demoCA# ls
crlnumber.old  index.txt.attr  newcerts
crlnumber  index.txt      index.txt.old   serial
root@deb-7:~/masum_cert/demoCA# 
root@deb-7:~/masum_cert/demoCA# cat serial 
1001
root@deb-7:~/masum_cert/demoCA# cat index.txt
V       180615030356Z           1000    unknown /C=BD/ST=Some-State/O=masum 
inc/CN=deb79/emailAddress=deb79@gmail.com
root@deb-7:~/masum_cert/demoCA# cat crlnumber
04
root@deb-7:~/masum_cert/demoCA# 

... we are now creating our first certificates without any passphrase.
... we are generating 2048 bit of certificate though this is default.
 
root@deb-7:~/masum_cert# openssl req -x509 -days 3650 -newkey rsa:2048 \
-keyout masumKey.pem -out masumCert.pem -config /root/masum_cert/openssl.cnf
Generating a 2048 bit RSA private key
.................+++
..................................................................................+++
writing new private key to 'masumKey.pem'
Enter PEM pass phrase: ****
Verifying - Enter PEM pass phrase: ****
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [BD]:
State or Province Name (full name) [Some-State]:dhaka
Locality Name (eg, city) []:dhaka                    
Organization Name (eg, company) [Internet Widgits Pty Ltd]:
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:deb79
Email Address []:deb79@gmail.com
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls -la
total 28
drwxr-xr-x  2 root root  4096 Jun 14 17:29 .
drwxr-xr-x 20 root root  4096 Jun 14 17:20 ..
-rw-r--r--  1 root root  1391 Jun 14 17:29 masumCert.pem
-rw-r--r--  1 root root  1834 Jun 14 17:29 masumKey.pem
-rw-r--r--  1 root root 10862 Jun 14 16:32 openssl.cnf
root@deb-7:~/masum_cert# 
 
root@deb-7:~/masum_cert# diff khabirCert.pem masumCert.pem 
5,6c5,6
< KoZIhvcNAQkBFg9kZWI3OUBnbWFpbC5jb20wHhcNMTcwNjE1MDAzNTQ1WhcNMTcw
< NzE1MDAzNTQ1WjCBgDELMAkGA1UEBhMCQkQxDjAMBgNVBAgMBWRoYWthMQ4wDAYD
---
> KoZIhvcNAQkBFg9kZWI3OUBnbWFpbC5jb20wHhcNMTcwNjE1MDAyOTA3WhcNMjcw
> NjEzMDAyOTA3WjCBgDELMAkGA1UEBhMCQkQxDjAMBgNVBAgMBWRoYWthMQ4wDAYD
17,22c17,22
< AQsFAAOCAQEAUEwUYJhxe73R0mXgCCkF22vegC/578TdzW4gdNUDZP5D8wl2iRWM
< 4TMpS4yI2u7/+NpdOoVaAAotoVSJ9k3V0aAhum4A6HnDqn/gBt/ytxU38Ts45u8z
< taLz2Z9s8PzkO60RjZ/L4cIkVFquu9vDoSh5e4C4wlFa9OtsGFgHm7PjVLBg6CHD
< w6P1X6dtq+4//rDJ0fDW0zxkfMtd2drjKDEwT2tKCFnsrFKDh46ARx+TJ8tQ2pw5
< OWw2X7QpqA3TgLt2pPMSQE7H+wv8qWTXBouA050cONFSb2SuvwtgOSeyYuZWZf8V
< 8JKz/08HqCG7iLI0B4G+k8y4pGD59UbkDg==
---
> AQsFAAOCAQEArV0u7nwHXqFuE+Tw67B4sPs1urr0NtherHYlNjFng2qv12tj9aQY
> YN8e6oCT0uhxeHLqMsl17Te3LMCCJtiTODiEDV0MZLeyhg7S0hQTa4nDeTIGBiyY
> dVtBuHOdkNOdw+ruR5PG0l/NvlWiN+BdDezLcdvKO+b/a7QGN/iH5Fqjv17QN5Oc
> ndN/xJTSkv0a/rkrTY7R3jAnLWz+G84tmX/zgfL30jVAt5LYh2pp6f6/RUnid4iD
> Ve0VkSJCw3cCX9TWtq82Bh6lI4d6DCOO44xZyHT5YOkHSX2NJFfzNDGME80U2IOF
> kf0eroxu37l5nSGedG81Q56NXB1wmxTDJA==
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
khabirCert.pem  masumCert.pem  masumKey.pem  openssl.cnf
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# cat -n masumKey.pem 
     1  -----BEGIN ENCRYPTED PRIVATE KEY-----
     2  MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIvgMvtUnH8CgCAggA
     3  MBQGCCqGSIb3DQMHBAiTS7YNC8UTvASCBMgwOLLp27BTwOV4EwxrZOCb3cqWe8O5
     4  DwyXqbQFVK6qKZulW886GyIdbMv9Nvfc4bs5gHP8/wW9imcstBKetV/jH6OCJ7f7
     5  uaE2lG/hEtUQcLeKIOcbMaBCw8GnioGT81qk09RcTZNSS5HqZZjw6UuSXGyjhRPa
     6  V3kqiD+BRGPCV7BMJwb5d4ZPBrmI2vzVNx3A1Q2YmkYcAxWcuzyKXUU+XC9TgBc4
     7  gWSyervH84JDjY57q9pzW/7rpEC1s+tyDckMtpjPTcRKYJvhJhuQmx3J0pgiW5fY
     8  FPWl2feGyjrmSPcDXsoMkda7CQZVjaaEUVq8eWIaENCjVSIDxgoiXKimB4EDhsQe
     9  TC1EaGsh0izmOTz9I48z7hAah7B3dqFs5KNSV54OLhoRx0tWqq0nIV7ifzIKyzoP
    10  kzSCd9vQjiNXvmHOtuH8r4pFS+X6d1MNy7zErboOSUI5AAnw3s8cwuG2IFM4zflB
    11  v86kF9O2qmIophpzEgHTxbyaxg/8nztSoG1GjhKKhHnVtkoUpAFN3expVpPpCQHI
    12  NlpSvJj6YyOQzsLt7k6WYNJlaUNdhKVPLg8Cd5Gzfk64vpmLXxfS8eFBrVTbRXJm
    13  XPZo5PIfSoqZvUSuvmr3uWDc+2NypUk60yaV86yVI0Ei/iHTYIbPsGrb6G27Ja3q
    14  3DkRukDwSyyo4WnZ7uGmp10jNlXx078RL96djWlgF7j3i87V7Mg9rB3OwFftedR/
    15  AC+iFKSJqeFxaQI0V0ecijs41YyoHwv/dQnyxkEu7mPNIRAJr1baAwL5FdG9Rlxh
    16  65XklhDIEz6yUuDMhnhZrJJSDpyOAjKkv3/z9OCHAPOt80dpcBAjXMhqejyktS2A
    17  Ux/NMLS3btCMjOHGAvVxaFBCQ7hXuJOG5gAV+5CP2y4f6I3hgTpne6wdNJ9kzZ1P
    18  4/kOrIVRd5CkF0oCdEnl5gUemZN6N+q1fpzBB1Nwpw1v9f2l7BMJU8Hn+C/fNtZF
    19  OOChrNX2EWvRm2JWPmnHlJlJ7kRwyGibf2q+N3ZcMzzViOdRnyiRmAM5XAJCLrDe
    20  vMvIvgSi1pren7sQIzd17BRhM27PARE4yx+Hma5ZDI0cNwUVTEKWnjw/glrSWLAT
    21  HeRv5Uch1vJ0CaTQErZNzCTp3KBPBFJfRg75WHSVeAeOnFm6dPtng+ddZmsb8MLj
    22  zRRuLdAfXBupV+UUleLPo9dn/JkQBinDVEffx4L98eH+agHcZNNxRq4q+s/0FJSs
    23  3zJEw3fN6+242u+K0uilIWrcArepo2MLQtZQFERRNIMrjNtJJpuBURAuu6M65Wp6
    24  1s/YtsKayiRq0NkN+3FKi6R+o4Ltcg+29urCFfcAsWENAQOCxOfZLm+QA7iEqRrc
    25  BvuNneDt5fyGoshln3Z2mt1nhBQQ+ekKAvC9Sy1g135fqjd/5cFv6XW2XtYw/9ri
    26  znSeRgpF8ZxD6e06PAYf449sVzTkCXYQFfc88AnhvrbtKRSfWoi+FZkwWLYUwqTY
    27  Gljjdu89BJb09VQPbd3eanW90MT/RiOR1n99MmC+6itzqVSEdNCMSaIU3GW6rZ7Z
    28  9m6bNeQQBsrD6iETq55aSDKP1IeoYYf/geMof3IMJwLZZ+3X+nETUkAKZAz7E0V3
    29  N20=
    30  -----END ENCRYPTED PRIVATE KEY-----
	
root@deb-7:~/masum_cert# cat -n masumCert.pem 
     1  -----BEGIN CERTIFICATE-----
     2  MIID1TCCAr2gAwIBAgIJANazGa9LwRcwMA0GCSqGSIb3DQEBCwUAMIGAMQswCQYD
     3  VQQGEwJCRDEOMAwGA1UECAwFZGhha2ExDjAMBgNVBAcMBWRoYWthMSEwHwYDVQQK
     4  DBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxDjAMBgNVBAMMBWRlYjc5MR4wHAYJ
     5  KoZIhvcNAQkBFg9kZWI3OUBnbWFpbC5jb20wHhcNMTcwNjE1MDAyOTA3WhcNMjcw
     6  NjEzMDAyOTA3WjCBgDELMAkGA1UEBhMCQkQxDjAMBgNVBAgMBWRoYWthMQ4wDAYD
     7  VQQHDAVkaGFrYTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMQ4w
     8  DAYDVQQDDAVkZWI3OTEeMBwGCSqGSIb3DQEJARYPZGViNzlAZ21haWwuY29tMIIB
     9  IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwm1ULortX59hl3EAJfjnrU3Y
    10  2kwQXvJMOkhd3258tx7KsvA9PkWNM5WlcnEGp9Tpq8DvIAA9AYvrAqOJddgymY8G
    11  Samp1h4wChdzM6PjyP4obSEjQeWqutD00GtVIQh9GYQlT93B+GpdyD0bibriog4r
    12  uAAT5YzdvGVaJceNemavdWM9UsQgdo6aGgCrtOudq+N3rpfRcC/ZyM0DlUx3tN+K
    13  WLy8o2dEipCHFMrQBT8/RrjKOVlovAqcnICXBZhYut+nWCGVhcprQ53oNz24bzqc
    14  xvjOecygOVi9L8oRcv1E1JCOPs9olsy1fBsnaNGgawnQE/CnCov0GgIya75k9QID
    15  AQABo1AwTjAdBgNVHQ4EFgQUY7KcXNo1xta98q+FClkpwEcsGYEwHwYDVR0jBBgw
    16  FoAUY7KcXNo1xta98q+FClkpwEcsGYEwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0B
    17  AQsFAAOCAQEArV0u7nwHXqFuE+Tw67B4sPs1urr0NtherHYlNjFng2qv12tj9aQY
    18  YN8e6oCT0uhxeHLqMsl17Te3LMCCJtiTODiEDV0MZLeyhg7S0hQTa4nDeTIGBiyY
    19  dVtBuHOdkNOdw+ruR5PG0l/NvlWiN+BdDezLcdvKO+b/a7QGN/iH5Fqjv17QN5Oc
    20  ndN/xJTSkv0a/rkrTY7R3jAnLWz+G84tmX/zgfL30jVAt5LYh2pp6f6/RUnid4iD
    21  Ve0VkSJCw3cCX9TWtq82Bh6lI4d6DCOO44xZyHT5YOkHSX2NJFfzNDGME80U2IOF
    22  kf0eroxu37l5nSGedG81Q56NXB1wmxTDJA==
    23  -----END CERTIFICATE-----
root@deb-7:~/masum_cert# 

... and this certificate is valid for

root@deb-7:~/masum_cert# openssl x509 -in masumCert.pem -dates -noout
notBefore=Jun 15 00:29:07 2017 GMT
notAfter=Jun 13 00:29:07 2027 GMT
root@deb-7:~/masum_cert# 

... if we need to renew CA key.

root@deb-7:~/masum_cert# openssl x509 -in masumCert.pem -out khabirCert.pem -signkey masumKey.pem
Getting Private key
Enter pass phrase for masumKey.pem: ****
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
khabirCert.pem  masumCert.pem  masumKey.pem  openssl.cnf
root@deb-7:~/masum_cert# 

... when we need to generate the CSR and host/user key

root@deb-7:~/masum_cert# openssl req -newkey rsa:2048 -keyout masum.key -out masumReq.pem 
Generating a 2048 bit RSA private key
...................................................................................+++
...........................................+++
writing new private key to 'masum.key'
Enter PEM pass phrase: ****
Verifying - Enter PEM pass phrase: ****
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:BD
State or Province Name (full name) [Some-State]:
Locality Name (eg, city) []:dhaka
Organization Name (eg, company) [Internet Widgits Pty Ltd]:
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:deb79
Email Address []:deb79@gmail.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []: ****
An optional company name []:
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
khabirCert.pem  masumCert.pem  masum.key  masumKey.pem  masumReq.pem  openssl.cnf
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# cat masum.key 
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIBk/GdI4p7lwCAggA
MBQGCCqGSIb3DQMHBAjuz7xlaMr08gSCBMjjdXHdlwHQiPq3FZLve412PRt2BiHu
ZLTdoh9ktmbM2hmvpLjaG5ZircKEPbFqgEVRe8TOg/hY0qsJV0Doi9Y/3Of4X21W
3/27vzq9N61uXKKe6etzbjDBqjBCxcv1jhOWsGa+bCJPFYcF2KNes92orN/NDVhz
D63ZxxlY1/hX4p8Fa3fu9aeWhgkIFn+62+nDWSF6ye4WD154aAK9s61j8bl3iw8o
jm1ScZX7nT7S8TrF65hUa8xBPlZU48uUZELMrWjevljFNe6I/PrdUB8cVZy9l+zy
Bs01NBaLt5SHKEpRmHHIPNR7+KIt5JnX26n48pyGmDZ4E6OXJxMQoj/9wZYHKW6f
pvNLqHtSFu1sj8wQ4N+rcWkwQ+uPOhDjcTeuppthC4NQZbiZLCFuawJArcNzmr2F
4N37b1BWfDPsXbXIHpgq0lVhoNpzrIJlITvA8ebKDjsQ+pPiF6Rph6UvH0j3Cgc6
k+2RtQbm+COvVoJbS29KSOysujzGj0I05Inxja1+A3Kduibw1f3dVnhRjbGldw4V
kyjAhtBWIr1bWabWhcXJ8wOaXaNZvgKT87yQ0kDtIedfgAh94a+MbqSYKJRGS2oM
zfUih3ohbOpqpPXDpsl2Yrbdi6AqRWR8/jmGSI7Hf0TTyROooYchdhupqdd/dyO2
ohnkfg7F5my42iWyDO9JfVrLiIfe6Kkpqe8EuNbnMgO7Z9pJcpbm8MKEE3of1tfS
x6rn+8Juxaz9ZtNI/x3E/Ju8c96xGjY8fPNDj3p6XFbs26E8xGmxicKZlGMOUR5z
TS67Yr2IFz9Vxe7aLNv9hFnn4BsypwCG1zxra3kQ5Uka2ucQ8FYj9zViXCXozqmR
E3i9ccME8tuL0TGz5fpropvzEZaVeKBcW22LOHNPd754EnruOSzGgQWhB8KWlH/J
wvK0V6ZHF3je7msigbFZXtjcLVlfzHDLwX17YtomPehY+9IRgbXVkg1DWaGlo210
lXswhm+xMDN2DvwBcO8O083yZl1rOa6s+WJY3KmMCvyKmQTUZRLCkXn6A8prWijS
AqjFX8f5tGQUnL1OHzzV0vyB3E1o6eDVWNmicvzAiqmYrkWycA3vb1TULm4GxSpF
iPHNex1c7nQJfVtmAgfwu/7+kcAlBWFxJqexTNoKYGHom8uvEktsUimPScVPkNdW
Kh0VhC9RiGUiTuPn5pLlAui0UYQqzB5QGZlZrV+fRUqEwqPR+J5MGtRLgq2TXBfZ
DbhHf+kLFQ3sF6tkPh+kczeyx2ynFe4XLEjpIBXTupP5jZfRdN2YsIKU275Jm5Dw
OcqMY3FzbsXie1uognlm+t74fQ5NcYT5lxwRPLp+T4IVep2tnCfUaBxQVwsOUeR9
m3Nzc3cFjiI/fdV8FSzxVVYcwJgKVTuRUFgzsqMmYT9jlpG/DS20ceAdOFWHno5K
Esw+EgfZNl0fMW2ZohSHnY7kGXKQ+78W3m55RfE47vITcWdSPnCyNe761eVzi9Jg
dMZw9UHpuyEqAAlc5elFK4tdPbf98DGmIYpybZEK6XfTAr0mjA3JbEpHXSgN47Xr
uVGFlMmGGEB+42WQCCrb/f/zhdIxsyuAhWiQuY/5KWNLIz+Z8PA5f8WUDpzGOXDl
xjM=
-----END ENCRYPTED PRIVATE KEY-----
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
khabirCert.pem  masumCert.pem  masum.key  masumKey.pem  masumReq.pem  openssl.cnf
root@deb-7:~/masum_cert# cat masumReq.pem 
-----BEGIN CERTIFICATE REQUEST-----
MIIC4DCCAcgCAQAwgYUxCzAJBgNVBAYTAkJEMRMwEQYDVQQIDApTb21lLVN0YXRl
MQ4wDAYDVQQHDAVkaGFrYTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkg
THRkMQ4wDAYDVQQDDAVkZWI3OTEeMBwGCSqGSIb3DQEJARYPZGViNzlAZ21haWwu
Y29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvEMaAj066eMv7F20
tMt/eTzbp9cGEu//do/FcLgknsIscchjrB26WHtaYFliBH2XbvF64kaz3zawaVVD
9xwRn+rssTUXO6syXzpBUiDsfy3xbDKXZ25FvI3E0tYuwQHiglWGbvsU9xrJQG/C
vYlRrIoj5DirVcunjMXSOr6fvF6qv4DlTrKpcxoAT39Tx6QkYuviosb7ByuVlMRu
KD/C037nRxRGPLkBGdb5dlBEfbZqs4D5WNwo/1M4IXzjcDh38DQAmhmTCeWVZ+kd
0to6E0VEMpdYAGly6hCDnkWxsDonsYkI3BaT+zhQmMT5nT2rybfI5uVlctxddcvs
f9q5RQIDAQABoBUwEwYJKoZIhvcNAQkHMQYMBDU2NzgwDQYJKoZIhvcNAQELBQAD
ggEBAAJOFWmvqYE2V9/B5B0ctVn2XNMXJgPJlrj1wQW+f00EDhrS0kKX05bHkIgf
fIyIp5sxfzzqLUL9Li/jnxzEKA1eOQsy2FPIwYjDbq+hrPpru1sdriKBFsRtRFGV
ROpn7N6khtf/UBeZVsR2XXinjddPYdLeqJS8z4lcp/upLHtFQM0kZFd0m0KRvf2Q
AMuG20x5FqmSP/vHirD+3Q20MxFubSbKsu0wvgCNPQCa4VpPqMmNUW2fkZA2Ao71
Tefc/d9NLSa/no5Oem39oTpIFZYVw5iJsOZTHWAEhujOP2Cwe+YCdID1H+43Mp64
BtIYguECxRb0q/JIqXHdPh3iXNY=
-----END CERTIFICATE REQUEST-----
root@deb-7:~/masum_cert# 

... Sign host/CSR certificate

root@deb-7:~/masum_cert# ls
masum.key  masumReq.pem  openssl.cnf
root@deb-7:~/masum_cert# 
  
  openssl ca -in masumReq.pem -days 365 -out masumCert.pem -notext -cert caCert.pem -keyfile caKey.pem

... and host/user KEY without CSR 

root@deb-7:~/masum_cert# openssl genrsa -out masum.key 2048
Generating RSA private key, 2048 bit long modulus
.................+++
.............+++
e is 65537 (0x10001)
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
khabirCert.pem  masumCert.pem  masum.key  masumKey.pem  openssl.cnf
root@deb-7:~/masum_cert# cat masum.key 
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAl5ZqafcgfbProBYyvyeTtje5q8LiU5wxcidmrr5qwgDzgMWl
KXellwHXapiiycNb6RWG/C2afMiaKGxFlk/wRomKu5dJO2n/TriculvMcwUNJLKy
TvSc4MPxQfE7OpL7Mhm8iZk0dDT1pzxMVmABncvekCZ4oid9slIKylSuYX+OY4og
kbTb1sEm+OAVBAinXXoIb+2iSZCoCN53aDi4GUa3Mxrvw/yWCEBLoubQFkRTayyR
JJb0fpU/KIgO0/4i5CK/sKPTuxKg/cPHCVNGhZzt7ujV+7w8glFYvmdfn9akvTm9
zQBYudzxrC0Fp+yALAFYGeO8Jx5kQDbZJ2+iDwIDAQABAoIBADqn0k9kd6cMSp1s
WYCMAOUeVPL4evkdVCi2xE3Tkp21HoPydoFAMcvnw4IUw9DMjjD3yn6j6sZkHPqN
QrPyBKhWql8CIC0kS80bNFIMGWVcTASqPMK+dkGmsCDzBhcZLqfpO4IGzTw2DeQD
OgqmJZn4fAtNR5p/K20nv9Mgx0UkLPHG5rX8R0f2Qp0nwuK/GpcgEup3tnjJq1DZ
HFhqpgTevGQqwzMDPQxitj3G2+WOFYAnsfdy3Fbt8kpc2UBdWLcEv7w95oKDGpyQ
4YOMgtUWfJbwQDlMQX46TDc9z3PnhzwpJa44CylBSNtoAxlwvvuvZSM+rthdrjMv
suVbJ8ECgYEAxW9wMauzPNdYzG8wV+PLPJCBEq62qEheJhcYqdQu56Np9EdEma+/
+MzkWKlefbuVjoRdxHudKi1dt7RNyXB1ASqi7q/RvIIFUdwy5s5s3BAw1XCRSyKZ
1dzt9u5tKlWf3UuDfw3CJ1Xs3j6pe2IPOSoKBJaE7bs0Le94WkzJ+u8CgYEAxI10
39umIIjlhCU3htRn9uCHrE7SUdD7Yz19wLjTIAY0IZ0YLCBYrYJE5VTXUZKelhQS
bMQP/c3WVPcy/xW3lARUP6zX/7J/yRpITUhLwY13JJVE90No+jsHbpjty1sAkTyr
MVEjoQnYXyIyMwbsYqdUPiKxJo+QtDEWTSKvSuECgYACF/9xl2eMMqBvcpJprDHA
j6u+vfmT6UiOUNpjGqvwquv5ujPBCXsYsVuOkSU+Yhng7Ahuh/0PsHF4/EGC7F1h
SMl3jIfF3v8dch9cET5YSxepe8sep9xHx1MCtl6T/1p1p1Jaq5OuhRvA85sqgsy0
h3yZtdrtBno0LoDxPDU8IwKBgA6Yvrw9MKor4Hee1+/QaGQiKpE2TVI8Jd8p2uPs
FenD7C0u4HOud0dzbDBny5HIRLS6it++870Sgz9OGGBvOXHpnGQaLvRTSkAiDoqG
uvGF0vpJh5ShUfN7XMLu4oH+oR0oF0KTVwUHmST/giDd+8Ib0RrIMsW9Va68En7p
+4ChAoGADG/85uvVIckLZ4NxDY1j6NVJ+YIpUGhIeVQWi9zTR+bkVakaZcmMaMqT
QIkZrhYGXLsKB1TvSvAQQOggfWLJMLC2sVmpqNuY3MPctg5A8rBzG1VWXw+rJUgH
WcXUOOjCyKmy0LTKO4QQTA5QC98RdQ3vR2l1skxi3UC4hT5ayKE=
-----END RSA PRIVATE KEY-----
root@deb-7:~/masum_cert# 

... Create host certificate from KEY  

root@deb-7:~/masum_cert# openssl req -new -key masum.key -x509 \
-out masum.crt -config openssl.cnf

You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [BD]:
State or Province Name (full name) [Some-State]:
Locality Name (eg, city) []:dhaka
Organization Name (eg, company) [Internet Widgits Pty Ltd]:
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:deb79
Email Address []:
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
khabirCert.pem  masumCert.pem  masum.crt  masum.key  masumKey.pem  openssl.cnf
root@deb-7:~/masum_cert# 

... Remove passphrase from a certificate 
 
root@deb-7:~/masum_cert# openssl rsa -passin pass:**** -in masum.key -out masum.key.unlocked
writing RSA key
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# cat masum.key.unlocked 
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA5qlpcMdHlqgBd4axkCQ3BJ8K0l+DsAady8BdPMVFl1ECtfGZ
ZrV9tW1FMGkRofNnfMb/vIjypQfDu6y6Fs4hmHU2Z21o0tLoDFwiCG7yoiqukT8e
mXX+G6gVTRMmhDpu9SsFKY/KyyRvHp0G4Kfyp7ur5M0kpHY934E51I6hZD25TRvg
yooDMNXI4khQMTogFAr4/gKD5i7LwLKlLB97ZV6AW4AnvMyi6fm8uv8LoG3nLun6
oMYgcmWFS5woVpwdF7jpb9Mf0/45OcEyGOAVFBgzAoBElHvQPHPSCY/U+Qj3LcXu
e8IcAKahctZhxGfP2UIe7+Yj6JKa5TPdcXSsMQIDAQABAoIBAQC++aMQOh5+kSlt
wfp/wkw/KkL2fRh2BHRffyxzJU4CA5O/+oGs9TVYolj3xPZRZUrYl5ajjauAkdYw
K8mDGjXcmadqqL5yVybDHQEchGeldrtEDMOUAYpbcaX5Q5LPReYaXP0QNTqNSOQr
r41DMiqJT6v5axQcir2dsMulvlXHvHSYNUIkiMXx4YVOJjoBwGlB0xhItqAVgZMw
oWTsGbcyukvYGFN6SsMbpbbdoxUbITdt1q0wTPOzES5ZnzHHreIalSTQngPxbCrm
qxM/dk7JvGQ4dI1UCjVJBRE9BGsje8esD9gwM/7oHAGgD3Bg53qBBiEW4UINxjqk
oj5j8eAFAoGBAPftinUog4G7yNMbFeyge+9Ojh62kBXTDayz5qgG2SiHZJt9GP8i
ybUCjlB/6bgnj9EGBStoOtgMD2t6+Vz+1imiO4OhT2w6KUKl0WNaSyn89zZfJEE6
rSLpuq2ztBgPvyLdLseNqqCIN4o/R+BNFiUW0K3vZUX/ybpQbDhLG7qDAoGBAO4r
9Y/NNYbw7C8FvDykfEuHzIwreYp2QT4QkrmBxYXJI7AB1ENOk0D8JEJ8HZfVhFDT
uGndk60Pw0MzoAcXZz6BRim0vb0uVBTvEYvEHjHpPckNjA/EADf0NQUEbt7sYQgM
OGoqRw/rezPsg38oS1L+fXPnSMyW8PfkpUjFjZA7AoGARhxZjDoRvk1BRFmjgI/9
nDXlwM+1vUY61rzlHF0bafenvsTIndXTnqmDX0Zc7KPbaqu+KIFIKrJ2ZdmXzPGP
1KQ5Gkcys5Na+ar0pJjzKoOL0UdkdEHIllfsX5Sy+B7z2UMdKHdqag07T5AHnmmO
OpzSFG3fgMUN4e8+O0kaJUsCgYAEZbdg8k78sNILhDWXgQnycw1pwRu7XLeTp8at
uiGleLM5+q6ql3bMils5BwWc2gpZW69Z9QdW+KWIRhm8R8hWNRjQiE/AgGx4/nj6
daKBFWdYoPFnER1X6yBXeV96qi6YcXFRNHqfZp+ds84xuNK7M4upainD7T2Btiz/
DPayJQKBgCbivzZgkn//FZqSet8ZphYmMSZGVrNReTdO1sxYNitpFwZNEf/YBnRf
dI1b5TltJlqOaYLlAOAVrkUUL8deh/vwBjShqNnF0gXm9ecKqKD9eCqRTBtsspV7
8RQOo/ZNqcnTNLQBgAACKoMM9nHiFdmG1SjiI4wRq0jSYW4fEcT/
-----END RSA PRIVATE KEY-----
root@deb-7:~/masum_cert# 

... Change passphrase for a certificate 

root@deb-7:~/masum_cert# openssl rsa -passin pass:**** -passout pass:**** \
 -in masum.key -out masum.key.unlocked
writing RSA key
root@deb-7:~/masum_cert# 

root@deb-7:~/masum_cert# ls
demoCA  masumCert.pem  masum.key  masumKey.pem  masum.key.unlocked  masumReq.pem  openssl.cnf
root@deb-7:~/masum_cert# 

... Sign host/CSR certificate
 
root@deb-7:~/masum_cert# openssl ca -in fileReq.pem -days 365 -out mahrus.pem \
-notext -cert caCert.pem -keyfile caKey.pem -config /root/masum_cert/openssl.cnf

Using configuration from /root/masum_cert/openssl.cnf
Enter pass phrase for caKey.pem:
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number: 4097 (0x1001)
        Validity
            Not Before: Jun 15 03:51:04 2017 GMT
            Not After : Jun 15 03:51:04 2018 GMT
        Subject:
            countryName               = BD
            stateOrProvinceName       = Some-State
            organizationName          = masum inc
            commonName                = deb79
            emailAddress              = deb79@gmail.com
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            Netscape Comment: 
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier: 
                9C:31:92:40:9B:C2:EC:FD:2A:B9:94:4C:E6:08:35:4A:4E:F2:FD:52
            X509v3 Authority Key Identifier: 
                keyid:A7:DD:F6:1A:35:30:55:A2:51:0D:60:F1:F2:E8:5F:91:EF:62:12:EF

Certificate is to be certified until Jun 15 03:51:04 2018 GMT (365 days)
Sign the certificate? [y/n]:y

1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated
root@deb-7:~/masum_cert# 

root@deb-7:~/masum_cert# ls
caCert.pem  crl.pem  file.crt  fileReq.pem  openssl.cnf
caKey.pem   demoCA   file.key  mahrus.pem
root@deb-7:~/masum_cert#  

... Create empty CRL or update the CRL after revocation of any certificate

root@deb-7:~/masum_cert# openssl ca -gencrl -crldays 30 -out crl.pem \
-keyfile caKey.pem -cert caCert.pem
Using configuration from /usr/lib/ssl/openssl.cnf
Enter pass phrase for caKey.pem:
root@deb-7:~/masum_cert# 
root@deb-7:~/masum_cert# ls
caCert.pem  crl.pem  fileCert.pem  file.key     openssl.cnf
caKey.pem   demoCA   file.crt      fileReq.pem
root@deb-7:~/masum_cert# 

... Revoke host certificate 

root@deb-7:~/masum_cert# openssl ca -revoke mahrus.pem -keyfile caKey.pem -cert caCert.pem 
Using configuration from /usr/lib/ssl/openssl.cnf
Enter pass phrase for caKey.pem:
Revoking Certificate 1001.
Data Base Updated
root@deb-7:~/masum_cert# ls

... List CRL contents  

root@deb-7:~/masum_cert# openssl crl -in crl.pem -noout -text
Certificate Revocation List (CRL):
        Version 2 (0x1)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: /C=BD/ST=Some-State/L=dhaka/O=masum inc/CN=deb79/emailAddress=deb79@gmail.com
        Last Update: Jun 15 03:33:39 2017 GMT
        Next Update: Jul 15 03:33:39 2017 GMT
        CRL extensions:
            X509v3 CRL Number: 
                4
No Revoked Certificates.
    Signature Algorithm: sha256WithRSAEncryption
         17:45:c1:3a:66:64:5b:80:29:ba:fb:f3:f7:c6:1b:d4:08:3d:
         6c:ef:e7:f9:d8:82:ef:65:d0:8e:6c:c6:35:78:1c:51:d0:f4:
         ea:7d:53:72:fd:16:7f:ac:c6:6f:4e:ba:7b:d4:96:32:ae:2d:
         87:39:72:02:bb:4b:1f:88:8b:df:95:f8:3c:78:f5:c4:0d:d2:
         67:9b:e6:6f:27:25:c0:7b:d4:23:d3:d9:dd:72:1b:82:f3:51:
         4c:95:22:1e:15:50:d2:ce:93:a6:5b:4b:4f:2c:ed:fa:26:8c:
         88:fe:92:12:1f:4f:c1:f0:38:aa:27:61:7c:e4:0f:1f:97:21:
         53:66
root@deb-7:~/masum_cert# 


